#version 400

uniform vec2 origin_00; 
uniform vec2 dir_0_00; 
uniform vec2 dir_1_00; 
uniform mat2 ginverse_00; 
uniform float weight_00_00; 
uniform float weight_00_01; 
uniform float weight_00_02; 
uniform float weight_00_03; 
uniform float weight_00_04; 
uniform float weight_00_05; 
uniform vec2 origin_01; 
uniform vec2 dir_0_01; 
uniform vec2 dir_1_01; 
uniform mat2 ginverse_01; 
uniform float weight_01_00; 
uniform float weight_01_01; 
uniform float weight_01_02; 
uniform float weight_01_03; 
uniform float weight_01_04; 
uniform float weight_01_05; 
uniform vec2 origin_02; 
uniform vec2 dir_0_02; 
uniform vec2 dir_1_02; 
uniform mat2 ginverse_02; 
uniform float weight_02_00; 
uniform float weight_02_01; 
uniform float weight_02_02; 
uniform float weight_02_03; 
uniform float weight_02_04; 
uniform float weight_02_05; 
uniform vec2 origin_03; 
uniform vec2 dir_0_03; 
uniform vec2 dir_1_03; 
uniform mat2 ginverse_03; 
uniform float weight_03_00; 
uniform float weight_03_01; 
uniform float weight_03_02; 
uniform float weight_03_03; 
uniform float weight_03_04; 
uniform float weight_03_05; 
uniform vec2 origin_04; 
uniform vec2 dir_0_04; 
uniform vec2 dir_1_04; 
uniform mat2 ginverse_04; 
uniform float weight_04_00; 
uniform float weight_04_01; 
uniform float weight_04_02; 
uniform float weight_04_03; 
uniform float weight_04_04; 
uniform float weight_04_05; 
uniform vec2 origin_05; 
uniform vec2 dir_0_05; 
uniform vec2 dir_1_05; 
uniform mat2 ginverse_05; 
uniform float weight_05_00; 
uniform float weight_05_01; 
uniform float weight_05_02; 
uniform float weight_05_03; 
uniform float weight_05_04; 
uniform float weight_05_05; 
uniform vec2 origin_06; 
uniform vec2 dir_0_06; 
uniform vec2 dir_1_06; 
uniform mat2 ginverse_06; 
uniform float weight_06_00; 
uniform float weight_06_01; 
uniform float weight_06_02; 
uniform float weight_06_03; 
uniform float weight_06_04; 
uniform float weight_06_05; 
uniform vec2 origin_07; 
uniform vec2 dir_0_07; 
uniform vec2 dir_1_07; 
uniform mat2 ginverse_07; 
uniform float weight_07_00; 
uniform float weight_07_01; 
uniform float weight_07_02; 
uniform float weight_07_03; 
uniform float weight_07_04; 
uniform float weight_07_05; 
uniform vec2 origin_08; 
uniform vec2 dir_0_08; 
uniform vec2 dir_1_08; 
uniform mat2 ginverse_08; 
uniform float weight_08_00; 
uniform float weight_08_01; 
uniform float weight_08_02; 
uniform float weight_08_03; 
uniform float weight_08_04; 
uniform float weight_08_05; 
uniform vec2 origin_09; 
uniform vec2 dir_0_09; 
uniform vec2 dir_1_09; 
uniform mat2 ginverse_09; 
uniform float weight_09_00; 
uniform float weight_09_01; 
uniform float weight_09_02; 
uniform float weight_09_03; 
uniform float weight_09_04; 
uniform float weight_09_05; 
uniform vec2 origin_10; 
uniform vec2 dir_0_10; 
uniform vec2 dir_1_10; 
uniform mat2 ginverse_10; 
uniform float weight_10_00; 
uniform float weight_10_01; 
uniform float weight_10_02; 
uniform float weight_10_03; 
uniform float weight_10_04; 
uniform float weight_10_05; 
uniform vec2 origin_11; 
uniform vec2 dir_0_11; 
uniform vec2 dir_1_11; 
uniform mat2 ginverse_11; 
uniform float weight_11_00; 
uniform float weight_11_01; 
uniform float weight_11_02; 
uniform float weight_11_03; 
uniform float weight_11_04; 
uniform float weight_11_05; 
uniform vec2 origin_12; 
uniform vec2 dir_0_12; 
uniform vec2 dir_1_12; 
uniform mat2 ginverse_12; 
uniform float weight_12_00; 
uniform float weight_12_01; 
uniform float weight_12_02; 
uniform float weight_12_03; 
uniform float weight_12_04; 
uniform float weight_12_05; 
uniform vec2 origin_13; 
uniform vec2 dir_0_13; 
uniform vec2 dir_1_13; 
uniform mat2 ginverse_13; 
uniform float weight_13_00; 
uniform float weight_13_01; 
uniform float weight_13_02; 
uniform float weight_13_03; 
uniform float weight_13_04; 
uniform float weight_13_05; 
uniform vec2 origin_14; 
uniform vec2 dir_0_14; 
uniform vec2 dir_1_14; 
uniform mat2 ginverse_14; 
uniform float weight_14_00; 
uniform float weight_14_01; 
uniform float weight_14_02; 
uniform float weight_14_03; 
uniform float weight_14_04; 
uniform float weight_14_05; 


in vec2 v_texture;
layout (location = 0) out vec4 FragColor;

float QuadraticValue(float v0,float v1,float v2,float v3,float v4,float v5, vec2 pos){
	float cumValue = 0;
	cumValue += (2 * pos[0] * pos[0] + 4 * pos[0] * pos[1] + 2 * pos[1] * pos[1] - 3 * pos[0] - 3 * pos[1] + 1) * v0;
	cumValue += (2 * pos[0] * pos[0] - 1 * pos[0]) * v1;
	cumValue += (2 * pos[1] * pos[1] - 1 * pos[1]) * v2;
	cumValue += (4 * pos[0] * pos[1])*v3;
	cumValue += (- 4 * pos[0] * pos[1] - 4 * pos[1] * pos[1] + 4 * pos[1])* v4;
	cumValue += (-4 * pos[0] * pos[0] - 4 * pos[0] * pos[1] + 4 * pos[0]) * v5;
	return cumValue;
}

void main(){
 
    vec2 ray;
	vec2 proj;
	vec2 baricenter;
	float value = 0;

	ray = v_texture - origin_00; 
	proj[0] = dot(ray, dir_0_00); 
	proj[1] = dot(ray, dir_1_00); 
	baricenter = ginverse_00 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_00_00,weight_00_01,weight_00_02,weight_00_03,weight_00_04,weight_00_05,baricenter);
	ray = v_texture - origin_01; 
	proj[0] = dot(ray, dir_0_01); 
	proj[1] = dot(ray, dir_1_01); 
	baricenter = ginverse_01 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_01_00,weight_01_01,weight_01_02,weight_01_03,weight_01_04,weight_01_05,baricenter);
	ray = v_texture - origin_02; 
	proj[0] = dot(ray, dir_0_02); 
	proj[1] = dot(ray, dir_1_02); 
	baricenter = ginverse_02 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_02_00,weight_02_01,weight_02_02,weight_02_03,weight_02_04,weight_02_05,baricenter);
	ray = v_texture - origin_03; 
	proj[0] = dot(ray, dir_0_03); 
	proj[1] = dot(ray, dir_1_03); 
	baricenter = ginverse_03 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_03_00,weight_03_01,weight_03_02,weight_03_03,weight_03_04,weight_03_05,baricenter);
	ray = v_texture - origin_04; 
	proj[0] = dot(ray, dir_0_04); 
	proj[1] = dot(ray, dir_1_04); 
	baricenter = ginverse_04 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_04_00,weight_04_01,weight_04_02,weight_04_03,weight_04_04,weight_04_05,baricenter);
	ray = v_texture - origin_05; 
	proj[0] = dot(ray, dir_0_05); 
	proj[1] = dot(ray, dir_1_05); 
	baricenter = ginverse_05 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_05_00,weight_05_01,weight_05_02,weight_05_03,weight_05_04,weight_05_05,baricenter);
	ray = v_texture - origin_06; 
	proj[0] = dot(ray, dir_0_06); 
	proj[1] = dot(ray, dir_1_06); 
	baricenter = ginverse_06 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_06_00,weight_06_01,weight_06_02,weight_06_03,weight_06_04,weight_06_05,baricenter);
	ray = v_texture - origin_07; 
	proj[0] = dot(ray, dir_0_07); 
	proj[1] = dot(ray, dir_1_07); 
	baricenter = ginverse_07 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_07_00,weight_07_01,weight_07_02,weight_07_03,weight_07_04,weight_07_05,baricenter);
	ray = v_texture - origin_08; 
	proj[0] = dot(ray, dir_0_08); 
	proj[1] = dot(ray, dir_1_08); 
	baricenter = ginverse_08 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_08_00,weight_08_01,weight_08_02,weight_08_03,weight_08_04,weight_08_05,baricenter);
	ray = v_texture - origin_09; 
	proj[0] = dot(ray, dir_0_09); 
	proj[1] = dot(ray, dir_1_09); 
	baricenter = ginverse_09 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_09_00,weight_09_01,weight_09_02,weight_09_03,weight_09_04,weight_09_05,baricenter);
	ray = v_texture - origin_10; 
	proj[0] = dot(ray, dir_0_10); 
	proj[1] = dot(ray, dir_1_10); 
	baricenter = ginverse_10 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_10_00,weight_10_01,weight_10_02,weight_10_03,weight_10_04,weight_10_05,baricenter);
	ray = v_texture - origin_11; 
	proj[0] = dot(ray, dir_0_11); 
	proj[1] = dot(ray, dir_1_11); 
	baricenter = ginverse_11 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_11_00,weight_11_01,weight_11_02,weight_11_03,weight_11_04,weight_11_05,baricenter);
	ray = v_texture - origin_12; 
	proj[0] = dot(ray, dir_0_12); 
	proj[1] = dot(ray, dir_1_12); 
	baricenter = ginverse_12 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_12_00,weight_12_01,weight_12_02,weight_12_03,weight_12_04,weight_12_05,baricenter);
	ray = v_texture - origin_13; 
	proj[0] = dot(ray, dir_0_13); 
	proj[1] = dot(ray, dir_1_13); 
	baricenter = ginverse_13 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_13_00,weight_13_01,weight_13_02,weight_13_03,weight_13_04,weight_13_05,baricenter);
	ray = v_texture - origin_14; 
	proj[0] = dot(ray, dir_0_14); 
	proj[1] = dot(ray, dir_1_14); 
	baricenter = ginverse_14 * proj; 
	if(baricenter[0] > 0 && baricenter[1] > 0 && (baricenter[0] + baricenter[1]) < 1) value += QuadraticValue(weight_14_00,weight_14_01,weight_14_02,weight_14_03,weight_14_04,weight_14_05,baricenter);

	if(value > 0){
	 value *= 10.f;
	 int parity = int(floor(value)) % 2;
	 if(parity == 0){
		FragColor = vec4(1.0,0.0,0.0,1.0);
	 }
	 else{
		FragColor = vec4(0.0,0.0,1.0,1.0);
	 }
	 
	}
    else{
	  FragColor = vec4(0.5,0.5,0.5,1.0);
    }
}
